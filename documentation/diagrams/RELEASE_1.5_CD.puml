@startuml
title AsylumCase Report Generator Class Diagram
skinparam backgroundcolor lightgrey

'End point mappings
class AsylumCaseController {
    - service : AsylumCaseService
    + getCases(casesRequestDto : CasesRequestDto) : Iterable<CasesResponseDto>
}

class AsylumCaseControllerAdvice {
    + handleException(exception : AsylumCaseNotFoundException) : ErrorDto
    + handleException(exception : BadRequestException) : ErrorDto
    + handleException(exception : PageNotFoundException) : ErrorDto
}

'Add cache config Annotations in service
class AsylumCaseService {
    - asylumCaseRepository : AsylumCaseRepository
    - asylumCaseMapper : AsylumCaseMapper
    + getAllAsylumCases() : Iterable<AsylumCaseResponseDto>
    + getCasesBy(casesRequestDto : CaseRequestDto) : Iterable<AsylumCaseResponseDto>
}

'repo for DynamoDB calls
class AsylumCaseRepository {
    - dynamoDbMapper : DynamoDBMapper
    + find(filterMap : Map<String, List<String>>, rangeMap : Map<String, String[]>) : ScanResultPage<AsylumCase>
    + findAll() : Iterable<AsylumCase>
    + saveAll()
}

'Entity for data model
class AsylumCase {
    - id : Integer
    - asylumOffice : String
    - citizenship : String
    - caseOutcome : String
    - completionDate : String
    - dateReceived : String
}

' Part of the  MapStruct dependency
interface AsylumCaseMapper {
    requestToEntity(asylumCaseRequestDto : AsylumCaseRequestDto) : AsylumCase
    entityToResponseDto(asylumCase : AsylumCase) : AsylumCaseResponseDto
    entitiesToResponsesDtos(asylumCases : Iterable<AsylumCase>) : Iterable<CasesResponseDto>
    pageToResponseDtos(Page<AsylumCase> asylumCases) : Iterable<CasesResponseDto>
}

AsylumCaseService ---> BadRequestException
AsylumCaseService ---> AsylumCaseNotFoundException
AsylumCaseService ---> PageNotFoundException

AsylumCaseController *- AsylumCaseService
AsylumCaseController -- AsylumCaseControllerAdvice

AsylumCaseService *- AsylumCaseRepository
AsylumCaseMapper *-- AsylumCaseService

AsylumCaseRepository --> AsylumCase

'Extension
'Association <|-- (owner <|-- pet) Implements
'Composition *-- (pet *-- leg) Instantiation (part of)
'Aggregation (car o-- wheel) Extends (has a)
@enduml